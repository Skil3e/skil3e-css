{"version":3,"sources":["webpack:///./src/pages/utilities/spacers.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["spacers","name","value","direction","Spacers","title","id","map","dir","key","label","codeString","className","space","SectionWrapper","children","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"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","file":"component---src-pages-utilities-spacers-tsx-85282d3956c7a425dcb9.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { CodeSample, ExampleContainer, SectionWrapper } from \"../../components/ExampleComponents\";\r\n\r\nconst spacers = [\r\n    { name: '0', value: \"0\" },\r\n    { name: '10', value: \"0.625rem\" },\r\n    { name: '15', value: \"0.9375rem\" },\r\n    { name: 'xs', value: \"0.375rem\" },\r\n    { name: 'sm', value: \"0.75rem\" },\r\n    { name: 'md', value: \"0.9375rem\" },\r\n    { name: 'lg', value: \"1.3125rem\" },\r\n    { name: 'xl', value: \"1.875rem\" },\r\n    { name: 'xxl', value: \"2.5rem\" },\r\n    { name: 'auto (only for margins)', value: \"auto\" },\r\n]\r\nconst direction = [\r\n    { name: '', value: \"\" },\r\n    { name: 'top', value: \"t\" },\r\n    { name: 'right', value: \"r\" },\r\n    { name: 'bottom', value: \"b\" },\r\n    { name: 'left', value: \"l\" },\r\n    { name: 'horizontal', value: \"x\" },\r\n    { name: 'vertical', value: \"y\" },\r\n\r\n]\r\nconst Spacers = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Spacers\" }/>\r\n            <h1>Spacers</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            <SectionWrapper id={ 'padding' }>\r\n                { direction.map( dir => <CodeSample key={ dir.name } label={ `For padding ${ dir.name }` } codeString={ `p${ dir.value }--{valueName}` }/> ) }\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'margin' }>\r\n                { direction.map( dir => <CodeSample key={ dir.name } label={ `For margin ${ dir.name }` } codeString={ `m${ dir.value }--{valueName}` }/> ) }\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'default-values' }>\r\n                <table className={ \"w--100 text--left \" }>\r\n                    <thead>\r\n                    <tr className={ \"bg--bgDimmed text--textDimmed small\" }>\r\n                        <th className={ \"px--md py--sm w--25 font--regular\" }>Value Name</th>\r\n                        <th className={ \"px--md py--sm font--regular\" }>Value</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { spacers.map( space => (\r\n                        <tr key={ space.name } className={ \"bg--bg text--text\" }>\r\n                            <td className={ \"p--md fira\" }>{ space.name }</td>\r\n                            <td className={ \"p--md \" }>{ space.value }</td>\r\n                        </tr>\r\n                    ) ) }\r\n                    </tbody>\r\n                </table>\r\n            </SectionWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Spacers\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}