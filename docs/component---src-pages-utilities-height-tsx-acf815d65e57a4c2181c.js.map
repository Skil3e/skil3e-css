{"version":3,"sources":["webpack:///./src/pages/utilities/height.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["height","heightCodeString","map","w","maxHeightCodeString","vHeightCodeString","Height","title","label","codeString","id","join","h","key","className","children","SectionWrapper","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"4FAAA,+CAIMA,EAAS,CAAE,MAAO,KAAM,KAAM,MAC9BC,EAAmBD,EAAOE,KAAK,SAAAC,GAAC,wBAAuBA,EAAvB,mBAChCC,EAAsBJ,EAAOE,KAAK,SAAAC,GAAC,6BAA4BA,EAA5B,mBACnCE,EAAoBL,EAAOE,KAAK,SAAAC,GAAC,8BAA6BA,EAA7B,mBA6BxBG,UA3BA,WACX,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,WACb,oCACA,mEACA,gBAAC,IAAD,CAAYC,MAAQ,aAAeC,WAAU,cAC7C,gBAAC,IAAD,CAAYD,MAAQ,iBAAmBC,WAAU,mBACjD,gBAAC,IAAD,CAAYD,MAAQ,sBAAwBC,WAAU,oBACtD,gBAAC,IAAD,CAAgBC,GAAK,SAAWD,WAAaR,EAAiBU,KAAM,KAChE,gBAAC,IAAD,CAAkBX,OAAQ,KACrBA,EAAOE,KAAI,SAAAU,GAAC,OAAK,gBAAC,IAAD,CAAOC,IAAKD,EAAGE,UAAS,MAASF,EAAMG,SAAQ,OAAUH,SAGnF,gBAAC,IAAD,CAAgBF,GAAK,aAAeD,WAAaL,EAAoBO,KAAM,KACvE,gBAAC,IAAD,CAAkBX,OAAQ,KACrBA,EAAOE,KAAI,SAAAU,GAAC,OAAK,gBAAC,IAAD,CAAOC,IAAKD,EAAGE,UAAS,WAAcF,EAAMG,SAAQ,YAAeH,SAG7F,gBAAC,IAAD,CAAgBF,GAAK,kBAAoBD,WAAaJ,EAAkBM,KAAM,KAC1E,kE,kCC7BhB,gLAWaK,EAAyD,SAAC,GAAgD,IAA7CN,EAA6C,EAA7CA,GAAIK,EAAyC,EAAzCA,SAAUN,EAA+B,EAA/BA,WAAYQ,EAAmB,EAAnBA,YAChG,OACI,2BAASP,GAAKA,EAAKI,UAAY,UAC3B,sBAAIA,UAAYG,GAAgBC,YAAaR,IAC3CK,EACAN,GAAc,gBAAC,IAAD,CAAiBU,KAAO,OAASV,WAAaA,MAgB7DW,EAA6DC,gBAAM,YAAqH,IAAjHN,EAAiH,EAAjHA,SAAUD,EAAuG,EAAvGA,UAAWQ,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCzB,cAAuC,MAA9B,IAA8B,EAAzB0B,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKb,UAAYQ,GACXR,EAAY,yBAAOA,UAAY,gBAAiB,gCAASa,GAA4Bb,EAArC,IAAmDS,GAAa,cAA+B,GACjJ,uBAAKK,MAAQ,CACTC,UAAqBJ,GAAa,IAClCzB,OAAqByB,GAAazB,EAClC8B,oBAAqB,0CAEpBhB,WAAgBU,EAAO,OAAS,QAAvB,KAAmCE,EAAO,aAAe,IAAzD,+EAA4IZ,GACpJC,OAMLgB,EAA+FV,gBAAM,YAAiD,IAA7CP,EAA6C,EAA7CA,UAAWkB,EAAkC,EAAlCA,UAAWjB,EAAuB,EAAvBA,SAAUa,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQd,WAAgBkB,EAAY,SAAW,IAA9B,yDAA0FlB,GAAwB,KAAUC,GAAsB,YAI3KkB,EAAuE,SAAC,GAA4B,IAAzBzB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOK,UAAY,eAAkBN,GACrC,gBAAC,IAAD,CAAiBW,KAAO,OAASV,WAAaA","file":"component---src-pages-utilities-height-tsx-acf815d65e57a4c2181c.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { Child, CodeSample, ExampleContainer, SectionWrapper } from \"../../components/ExampleComponents\";\r\n\r\nconst height = [ '100', '75', '50', '25' ]\r\nconst heightCodeString = height.map( w => `<div class=\"h--${ w }\">...</div>\\n` )\r\nconst maxHeightCodeString = height.map( w => `<div class=\"max__h--${ w }\">...</div>\\n` )\r\nconst vHeightCodeString = height.map( w => `<div class=\"view__h--${ w }\">...</div>\\n` )\r\n\r\nconst Height = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Height\" }/>\r\n            <h1>Height</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            <CodeSample label={ \"For height\" } codeString={ `h--{size}` }/>\r\n            <CodeSample label={ \"For max height\" } codeString={ `max__h--{size}` }/>\r\n            <CodeSample label={ \"For viewport height\" } codeString={ `view__h--{size}` }/>\r\n            <SectionWrapper id={ 'height' } codeString={ heightCodeString.join( '' ) }>\r\n                <ExampleContainer height={300}>\r\n                    {height.map(h =>  <Child key={h} className={ `h--${h}` } children={ `.h--${h}` }/>)}\r\n                </ExampleContainer>\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'max-height' } codeString={ maxHeightCodeString.join( '' ) }>\r\n                <ExampleContainer height={300}>\r\n                    {height.map(h =>  <Child key={h} className={ `max__h--${h}` } children={ `.max__h--${h}` }/>)}\r\n                </ExampleContainer>\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'viewport-height' } codeString={ vHeightCodeString.join( '' ) }>\r\n                <p>You can also use viewport widths.</p>\r\n            </SectionWrapper>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Height\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}