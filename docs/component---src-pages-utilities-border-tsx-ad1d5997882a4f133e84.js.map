{"version":3,"sources":["webpack:///./src/data/colors-styles.ts","webpack:///./src/components/ExampleComponents.tsx","webpack:///./src/data/border.ts","webpack:///./src/pages/utilities/border.tsx"],"names":["colors","styles","name","class","SectionWrapper","id","children","codeString","headingSize","className","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample","label","borderPos","borderWidth","borderRadius","borderPosCodeString","map","brd","border0CodeString","borderWidthCodeString","width","borderColorCodeString","color","borderRadiusCodeString","radius","Border","title","join","key"],"mappings":"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","file":"component---src-pages-utilities-border-tsx-ad1d5997882a4f133e84.js","sourcesContent":["export const colors = ['primary', 'danger', 'warning']\r\nexport const styles = [\r\n    { name: 'Background', class: 'bg--{color}' },\r\n    { name: 'Text', class: 'text--{color}' },\r\n    { name: 'SVG', class: 'fill--{color}' },\r\n    { name: 'Border', class: 'brd--{color}' },\r\n]\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n","import { colors } from \"./colors-styles\";\r\n\r\nexport const borderPos = [ '', '-top', '-bottom', '-y', '-right', '-left', '-x', ]\r\nexport const borderWidth = [ '', '--md', '--lg', '-top--md', '-bottom--md', '-y--md', '-right--md', '-left--md', '-x--md', ]\r\nexport const borderRadius = ['', '--md', '--lg', '--circle']\r\nexport const borderPosCodeString = borderPos.map( brd => `<div class=\"brd${ brd }\">...</div>\\n` )\r\nexport const border0CodeString = borderPos.map( brd => {\r\n    if (brd !== \"-x\" && brd !== \"-y\") {\r\n        return (`<div class=\"brd${ brd }--0\">...</div>\\n`)\r\n    }\r\n} )\r\nexport const borderWidthCodeString = borderWidth.map( width => `<div class=\"brd${ width }\">...</div>\\n` )\r\nexport const borderColorCodeString = colors.map(color => `<div class=\"brd brd--${color}\">...</div>\\n`)\r\nexport const borderRadiusCodeString = borderRadius.map(radius => `<div class=\"round${radius}\">...</div>\\n`)\r\n","import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { CodeSample, SectionWrapper } from \"../../components/ExampleComponents\";\r\nimport { border0CodeString, borderColorCodeString, borderPos, borderPosCodeString, borderRadius, borderRadiusCodeString, borderWidth, borderWidthCodeString } from \"../../data/border\";\r\nimport { colors } from \"../../data/colors-styles\";\r\n\r\n\r\nconst Border = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Border\" }/>\r\n            <h1>Border</h1>\r\n            <p>The class constructor looks like this <span className={ \"text--textDimmed\" }>( parenthesis is optional )</span>:</p>\r\n\r\n            <CodeSample label={ \"For border position and width\" } codeString={ `brd(-{position})(--{size})` }/>\r\n            <CodeSample label={ \"For border color\" } codeString={ `brd--{color}` }/>\r\n            <CodeSample label={ \"For border radius\" } codeString={ `round(--{size})` }/>\r\n\r\n            <SectionWrapper id={ \"border-position\" } codeString={ borderPosCodeString.join( '' ) }>\r\n                { borderPos.map( brd => <div key={brd} className={ `p--md mb--sm bg--bg text--textDimmed brd${ brd }` }>.brd{ brd }</div> ) }\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper id={ \"border-width\" } codeString={ borderWidthCodeString.join( '' ) }>\r\n                { borderWidth.map( width => <div key={width} className={ `p--md mb--sm bg--bg text--textDimmed brd${ width }` }>.brd{ width }</div> ) }\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper id={ \"subtract-border\" } codeString={ border0CodeString.join( \"\" ) }>\r\n                { borderPos.map( brd => {\r\n                    if (brd !== \"-x\" && brd !== \"-y\") {\r\n                        return <div key={brd} className={ `p--md mb--sm bg--bg text--textDimmed brd brd${ brd }--0` }>.brd{ brd }--0</div>\r\n                    }\r\n                } ) }\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper id={ \"border-color\" } codeString={ borderColorCodeString.join( '' ) }>\r\n                { colors.map( color => <div key={color} className={ `p--md mb--sm bg--bg text--textDimmed brd brd--${ color }` }>.brd .brd--{ color }</div> ) }\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper id={ \"border-radius\" } codeString={ borderRadiusCodeString.join( '' ) }>\r\n                { borderRadius.map( radius => <div key={radius} className={ `p--md mb--sm bg--bg text--textDimmed round${ radius }` }>.round{ radius }</div> ) }\r\n            </SectionWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Border\r\n"],"sourceRoot":""}