{"version":3,"sources":["webpack:///./src/pages/utilities/transitions.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["transitions","name","type","transitionsCodeString","Transitions","title","label","codeString","id","className","fullwidth","map","space","key","SectionWrapper","children","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","CodeSample"],"mappings":"uJAIMA,EAAc,CAChB,CACIC,KAAM,GACNC,KAAM,uFAEV,CACID,KAAM,WACNC,KAAM,uDAEV,CACID,KAAM,QACNC,KAAM,QAGRC,EAAwB,oEAAqEH,EAAY,GAAGC,KAAvF,cAmCZG,UAlCK,WAChB,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,gBACb,yCACA,mEACA,gBAAC,IAAD,CAAYC,MAAQ,iBAAmBC,WAAU,uBAEjD,gBAAC,IAAD,CAAgBC,GAAK,cAAgBD,WAAaJ,GAC9C,gBAAC,IAAD,CAAOM,UAAY,gFAAkFC,WAAS,KAGlH,gBAAC,IAAD,CAAgBF,GAAK,kBACjB,yBAAOC,UAAY,sBACf,6BACA,sBAAIA,UAAY,uCACZ,sBAAIA,UAAY,qCAAhB,SACA,sBAAIA,UAAY,+BAAhB,UAGJ,6BACET,EAAYW,KAAK,SAAAC,GAAK,OACpB,sBAAIC,IAAMD,EAAMX,KAAOQ,UAAY,qBAC/B,sBAAIA,UAAY,cAAhB,eAA6CG,EAAMX,MACnD,sBAAIQ,UAAY,cAAiBG,EAAMV,gB,kCC3CnE,gLAWaY,EAAyD,SAAC,GAAgD,IAA7CN,EAA6C,EAA7CA,GAAIO,EAAyC,EAAzCA,SAAUR,EAA+B,EAA/BA,WAAYS,EAAmB,EAAnBA,YAChG,OACI,2BAASR,GAAKA,EAAKC,UAAY,UAC3B,sBAAIA,UAAYO,GAAgBC,YAAaT,IAC3CO,EACAR,GAAc,gBAAC,IAAD,CAAiBW,KAAO,OAASX,WAAaA,MAgB7DY,EAA6DC,gBAAM,YAAqH,IAAjHL,EAAiH,EAAjHA,SAAUN,EAAuG,EAAvGA,UAAWY,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCC,cAAuC,MAA9B,IAA8B,EAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKlB,UAAYY,GACXZ,EAAY,yBAAOA,UAAY,gBAAiB,gCAASkB,GAA4BlB,EAArC,IAAmDa,GAAa,cAA+B,GACjJ,uBAAKM,MAAQ,CACTC,UAAqBL,GAAa,IAClCC,OAAqBD,GAAaC,EAClCK,oBAAqB,0CAEpBrB,WAAgBc,EAAO,OAAS,QAAvB,KAAmCG,EAAO,aAAe,IAAzD,+EAA4IjB,GACpJM,OAMLgB,EAA+FX,gBAAM,YAAiD,IAA7CX,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,UAAWK,EAAuB,EAAvBA,SAAUa,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQnB,WAAgBC,EAAY,SAAW,IAA9B,yDAA0FD,GAAwB,KAAUM,GAAsB,YAI3KiB,EAAuE,SAAC,GAA4B,IAAzB1B,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOE,UAAY,eAAkBH,GACrC,gBAAC,IAAD,CAAiBY,KAAO,OAASX,WAAaA","file":"component---src-pages-utilities-transitions-tsx-aa9137d586cc07badb7a.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { Child, CodeSample, SectionWrapper } from \"../../components/ExampleComponents\";\r\n\r\nconst transitions = [\r\n    {\r\n        name: \"\",\r\n        type: 'background-color, border-color, color, fill, stroke, opacity, box-shadow, transform'\r\n    },\r\n    {\r\n        name: \"--colors\",\r\n        type: 'background-color, border-color, color, fill, stroke'\r\n    },\r\n    {\r\n        name: \"--all\",\r\n        type: 'all'\r\n    },\r\n];\r\nconst transitionsCodeString = `<div class=\"bg--bg hover:bg--primary hover:text--white transition${ transitions[1].name }\">...</div>`;\r\nconst Transitions = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Transitions\" }/>\r\n            <h1>Transitions</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            <CodeSample label={ \"For Transition\" } codeString={ `transition{--type}` }/>\r\n\r\n            <SectionWrapper id={ \"transitions\" } codeString={ transitionsCodeString }>\r\n                <Child className={ \"cursor--pointer bg--bg hover:bg--primary hover:text--white transition--colors\" } fullwidth/>\r\n            </SectionWrapper>\r\n\r\n            <SectionWrapper id={ 'default-values' }>\r\n                <table className={ \"w--100 text--left \" }>\r\n                    <thead>\r\n                    <tr className={ \"bg--bgDimmed text--textDimmed small\" }>\r\n                        <th className={ \"px--md py--sm w--25 font--regular\" }>Class</th>\r\n                        <th className={ \"px--md py--sm font--regular\" }>Type</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    { transitions.map( space => (\r\n                        <tr key={ space.name } className={ \"bg--bg text--text\" }>\r\n                            <td className={ \"p--md fira\" }>.transitions{ space.name }</td>\r\n                            <td className={ \"p--md fira\" }>{ space.type }</td>\r\n                        </tr>\r\n                    ) ) }\r\n                    </tbody>\r\n                </table>\r\n            </SectionWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Transitions\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}