{"version":3,"sources":["webpack:///./src/pages/utilities.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["breakpoints","name","value","width","Utilities","title","className","label","codeString","id","map","bp","key","SectionWrapper","children","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"qJAIMA,EAAc,CAChB,CAAEC,KAAM,QAASC,MAAO,KAAMC,MAAO,OACrC,CAAEF,KAAM,SAAUC,MAAO,KAAMC,MAAO,OACtC,CAAEF,KAAM,SAAUC,MAAO,KAAMC,MAAO,OACtC,CAAEF,KAAM,UAAWC,MAAO,KAAMC,MAAO,SAkB5BC,UAfG,WACd,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,cACb,uCACA,wEAA+C,wBAAMC,UAAW,QAAjB,QAA/C,sCAAsH,wBAAMA,UAAW,QAAjB,QAAtH,uBACA,gBAAC,IAAD,CAAYC,MAAK,gBAAqBC,WAAU,8CAChD,gBAAC,IAAD,CAAgBC,GAAK,cACjB,uFACET,EAAYU,KAAK,SAAAC,GAAE,OAAI,gBAAC,IAAD,CAAYC,IAAMD,EAAGV,KAAOM,MAAK,OAAWI,EAAGV,KAAd,gBAAoCU,EAAGR,MAAvC,MAAqDK,WAAiBG,EAAGT,MAAV,qB,kCCpBzI,gLAWaW,EAAyD,SAAC,GAAgD,IAA7CJ,EAA6C,EAA7CA,GAAIK,EAAyC,EAAzCA,SAAUN,EAA+B,EAA/BA,WAAYO,EAAmB,EAAnBA,YAChG,OACI,2BAASN,GAAKA,EAAKH,UAAY,UAC3B,sBAAIA,UAAYS,GAAgBC,YAAaP,IAC3CK,EACAN,GAAc,gBAAC,IAAD,CAAiBS,KAAO,OAAST,WAAaA,MAgB7DU,EAA6DC,gBAAM,YAAqH,IAAjHL,EAAiH,EAAjHA,SAAUR,EAAuG,EAAvGA,UAAWc,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCC,cAAuC,MAA9B,IAA8B,EAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKpB,UAAYc,GACXd,EAAY,yBAAOA,UAAY,gBAAiB,gCAASoB,GAA4BpB,EAArC,IAAmDe,GAAa,cAA+B,GACjJ,uBAAKM,MAAQ,CACTC,UAAqBL,GAAa,IAClCC,OAAqBD,GAAaC,EAClCK,oBAAqB,0CAEpBvB,WAAgBgB,EAAO,OAAS,QAAvB,KAAmCG,EAAO,aAAe,IAAzD,+EAA4InB,GACpJQ,OAMLgB,EAA+FX,gBAAM,YAAiD,IAA7Cb,EAA6C,EAA7CA,UAAWyB,EAAkC,EAAlCA,UAAWjB,EAAuB,EAAvBA,SAAUa,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQrB,WAAgByB,EAAY,SAAW,IAA9B,yDAA0FzB,GAAwB,KAAUQ,GAAsB,YAI3KkB,EAAuE,SAAC,GAA4B,IAAzBzB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOF,UAAY,eAAkBC,GACrC,gBAAC,IAAD,CAAiBU,KAAO,OAAST,WAAaA","file":"component---src-pages-utilities-tsx-0e4a5ecdc278f50371f1.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../components/seo\";\r\nimport { CodeSample, SectionWrapper } from \"../components/ExampleComponents\";\r\n\r\nconst breakpoints = [\r\n    { name: \"phone\", value: \"sm\", width: \"480\" },\r\n    { name: \"tablet\", value: \"md\", width: \"768\" },\r\n    { name: \"laptop\", value: \"lg\", width: \"992\" },\r\n    { name: \"desktop\", value: \"xl\", width: \"1200\" }\r\n]\r\n\r\nconst Utilities = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Utilities\" }/>\r\n            <h1>Utilities</h1>\r\n            <p>Default logic behind the class constructors <span className={\"fira\"}>\"__\"</span> to separate properties and types, <span className={\"fira\"}>\"--\"</span> to define a value </p>\r\n            <CodeSample label={ `Basic example` } codeString={ `{breakpoint}__{property}__{type}--{value}` }/>\r\n            <SectionWrapper id={ 'responsive' }>\r\n                <p>You can modify the classes base on media queries by using:</p>\r\n                { breakpoints.map( bp => <CodeSample key={ bp.name } label={ `For ${ bp.name } (min-width: ${ bp.width }px)` } codeString={ `${ bp.value }__{class}` }/> ) }\r\n            </SectionWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Utilities\r\n\r\n\r\n\r\n\r\n\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}