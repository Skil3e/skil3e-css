{"version":3,"sources":["webpack:///./src/pages/utilities/width.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["width","widthCodeString","map","w","maxWidthCodeString","vWidthCodeString","Width","title","label","codeString","id","join","key","className","children","SectionWrapper","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"8FAAA,+CAIMA,EAAQ,CAAE,MAAO,KAAM,KAAM,MAC7BC,EAAkBD,EAAME,KAAK,SAAAC,GAAC,wBAAuBA,EAAvB,mBAC9BC,EAAqBJ,EAAME,KAAK,SAAAC,GAAC,6BAA4BA,EAA5B,mBACjCE,EAAmBL,EAAME,KAAK,SAAAC,GAAC,8BAA6BA,EAA7B,mBAyBtBG,UAvBD,WACV,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,UACb,mCACA,mEACA,gBAAC,IAAD,CAAYC,MAAQ,YAAcC,WAAU,cAC5C,gBAAC,IAAD,CAAYD,MAAQ,gBAAkBC,WAAU,mBAChD,gBAAC,IAAD,CAAYD,MAAQ,qBAAuBC,WAAU,oBACrD,gBAAC,IAAD,CAAgBC,GAAK,QAAUD,WAAaR,EAAgBU,KAAM,KAC7DX,EAAME,KAAI,SAAAC,GAAC,OAAK,gBAAC,IAAD,CAAOS,IAAKT,EAAGU,UAAS,MAASV,EAAMW,SAAQ,OAAUX,QAE9E,gBAAC,IAAD,CAAgBO,GAAK,YAAcD,WAAaL,EAAmBO,KAAM,KACpEX,EAAME,KAAI,SAAAC,GAAC,OAAK,gBAAC,IAAD,CAAOS,IAAKT,EAAGU,UAAS,WAAcV,EAAMW,SAAQ,YAAeX,QAExF,gBAAC,IAAD,CAAgBO,GAAK,iBAAmBD,WAAaJ,EAAiBM,KAAM,KACxE,kE,kCCzBhB,gLAWaI,EAAyD,SAAC,GAAgD,IAA7CL,EAA6C,EAA7CA,GAAII,EAAyC,EAAzCA,SAAUL,EAA+B,EAA/BA,WAAYO,EAAmB,EAAnBA,YAChG,OACI,2BAASN,GAAKA,EAAKG,UAAY,UAC3B,sBAAIA,UAAYG,GAAgBC,YAAaP,IAC3CI,EACAL,GAAc,gBAAC,IAAD,CAAiBS,KAAO,OAAST,WAAaA,MAgB7DU,EAA6DC,gBAAM,YAAqH,IAAjHN,EAAiH,EAAjHA,SAAUD,EAAuG,EAAvGA,UAAWQ,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCC,cAAuC,MAA9B,IAA8B,EAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKd,UAAYQ,GACXR,EAAY,yBAAOA,UAAY,gBAAiB,gCAASc,GAA4Bd,EAArC,IAAmDS,GAAa,cAA+B,GACjJ,uBAAKM,MAAQ,CACTC,UAAqBL,GAAa,IAClCC,OAAqBD,GAAaC,EAClCK,oBAAqB,0CAEpBjB,WAAgBU,EAAO,OAAS,QAAvB,KAAmCG,EAAO,aAAe,IAAzD,+EAA4Ib,GACpJC,OAMLiB,EAA+FX,gBAAM,YAAiD,IAA7CP,EAA6C,EAA7CA,UAAWmB,EAAkC,EAAlCA,UAAWlB,EAAuB,EAAvBA,SAAUc,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQf,WAAgBmB,EAAY,SAAW,IAA9B,yDAA0FnB,GAAwB,KAAUC,GAAsB,YAI3KmB,EAAuE,SAAC,GAA4B,IAAzBzB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOI,UAAY,eAAkBL,GACrC,gBAAC,IAAD,CAAiBU,KAAO,OAAST,WAAaA","file":"component---src-pages-utilities-width-tsx-3cdc44b3ecaf1d11983f.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { Child, CodeSample, SectionWrapper } from \"../../components/ExampleComponents\";\r\n\r\nconst width = [ '100', '75', '50', '25' ]\r\nconst widthCodeString = width.map( w => `<div class=\"w--${ w }\">...</div>\\n` )\r\nconst maxWidthCodeString = width.map( w => `<div class=\"max__w--${ w }\">...</div>\\n` )\r\nconst vWidthCodeString = width.map( w => `<div class=\"view__w--${ w }\">...</div>\\n` )\r\n\r\nconst Width = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Width\" }/>\r\n            <h1>Width</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            <CodeSample label={ \"For width\" } codeString={ `w--{size}` }/>\r\n            <CodeSample label={ \"For max width\" } codeString={ `max__w--{size}` }/>\r\n            <CodeSample label={ \"For viewport width\" } codeString={ `view__w--{size}` }/>\r\n            <SectionWrapper id={ 'width' } codeString={ widthCodeString.join( '' ) }>\r\n                {width.map(w =>  <Child key={w} className={ `w--${w}` } children={ `.w--${w}` }/>)}\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'max-width' } codeString={ maxWidthCodeString.join( '' ) }>\r\n                {width.map(w =>  <Child key={w} className={ `max__w--${w}` } children={ `.max__w--${w}` }/>)}\r\n            </SectionWrapper>\r\n            <SectionWrapper id={ 'viewport-width' } codeString={ vWidthCodeString.join( '' ) }>\r\n                <p>You can also use viewport widths.</p>\r\n            </SectionWrapper>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Width\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}