{"version":3,"sources":["webpack:///./src/data/colors-styles.ts","webpack:///./src/pages/utilities/colors-styles.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["colors","styles","name","class","ColorStyles","title","map","style","key","label","codeString","id","className","color","index","height","width","cx","cy","r","SectionWrapper","children","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","wrap","customLabel","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"4FAAA,oEAAO,IAAMA,EAAS,CAAC,UAAW,SAAU,WAC/BC,EAAS,CAClB,CAAEC,KAAM,aAAcC,MAAO,eAC7B,CAAED,KAAM,OAAQC,MAAO,iBACvB,CAAED,KAAM,MAAOC,MAAO,iBACtB,CAAED,KAAM,SAAUC,MAAO,kB,uGC2CdC,UA3CK,WAChB,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,kBACb,6CACA,mEACEJ,IAAOK,KAAK,SAAAC,GAAK,OAAI,gBAAC,IAAD,CAAYC,IAAKD,EAAML,KAAMO,MAAK,OAAWF,EAAML,KAAUQ,WAAaH,EAAMJ,WACvG,uBAAKQ,GAAK,aAAeC,UAAY,UACjC,wCACEZ,IAAOM,KAAK,SAAAO,GAAK,OAAI,uBAAKL,IAAKK,EAAOD,UAAS,oBAAwBC,GAAlD,QAAoEA,OAG/F,uBAAKF,GAAK,OAASC,UAAY,UAC3B,kCACA,uBAAKA,UAAY,gBACXZ,IAAOM,KAAK,SAAAO,GAAK,OAAI,wBAAML,IAAKK,EAAOD,UAAS,sBAA0BC,GAArD,UAAyEA,QAIxG,uBAAKF,GAAK,SAAWC,UAAY,UAC7B,oCACEZ,IAAOM,KAAK,SAAAO,GAAK,OAAI,uBAAKL,IAAKK,EAAOD,UAAS,yBAA6BC,GAAvD,UAA2EA,OAGtG,uBAAKF,GAAK,MAAQC,UAAY,UAC1B,iCACA,uBAAKA,UAAY,qBACXZ,IAAOM,KAAK,SAAEO,EAAOC,GACnB,OACI,uBAAKN,IAAKK,EAAOD,UAAY,gBAA4B,IAAVE,EAAc,UAAY,KACrE,uBAAKC,OAAO,MAAMC,MAAM,MAAMJ,UAAS,SAAaC,GAChD,0BAAQI,GAAG,KAAKC,GAAG,KAAKC,EAAE,QAE9B,qCAAcN,Y,kCCtC9C,gLAWaO,EAAyD,SAAC,GAAgD,IAA7CT,EAA6C,EAA7CA,GAAIU,EAAyC,EAAzCA,SAAUX,EAA+B,EAA/BA,WAAYY,EAAmB,EAAnBA,YAChG,OACI,2BAASX,GAAKA,EAAKC,UAAY,UAC3B,sBAAIA,UAAYU,GAAgBC,YAAaZ,IAC3CU,EACAX,GAAc,gBAAC,IAAD,CAAiBc,KAAO,OAASd,WAAaA,MAgB7De,EAA6DC,gBAAM,YAAqH,IAAjHL,EAAiH,EAAjHA,SAAUT,EAAuG,EAAvGA,UAAWe,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCf,cAAuC,MAA9B,IAA8B,EAAzBgB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKpB,UAAYe,GACXf,EAAY,yBAAOA,UAAY,gBAAiB,gCAASoB,GAA4BpB,EAArC,IAAmDgB,GAAa,cAA+B,GACjJ,uBAAKrB,MAAQ,CACT0B,UAAqBH,GAAa,IAClCf,OAAqBe,GAAaf,EAClCmB,oBAAqB,0CAEpBtB,WAAgBiB,EAAO,OAAS,QAAvB,KAAmCE,EAAO,aAAe,IAAzD,+EAA4InB,GACpJS,OAMLc,EAA+FT,gBAAM,YAAiD,IAA7Cd,EAA6C,EAA7CA,UAAWwB,EAAkC,EAAlCA,UAAWf,EAAuB,EAAvBA,SAAUd,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQK,WAAgBwB,EAAY,SAAW,IAA9B,yDAA0FxB,GAAwB,KAAUS,GAAsB,YAI3KgB,EAAuE,SAAC,GAA4B,IAAzB5B,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOE,UAAY,eAAkBH,GACrC,gBAAC,IAAD,CAAiBe,KAAO,OAASd,WAAaA","file":"component---src-pages-utilities-colors-styles-tsx-2643590526baf08bf61e.js","sourcesContent":["export const colors = ['primary', 'danger', 'warning']\r\nexport const styles = [\r\n    { name: 'Background', class: 'bg--{color}' },\r\n    { name: 'Text', class: 'text--{color}' },\r\n    { name: 'SVG', class: 'fill--{color}' },\r\n    { name: 'Border', class: 'brd--{color}' },\r\n]\r\n","import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { CodeSample } from \"../../components/ExampleComponents\";\r\nimport { colors, styles } from \"../../data/colors-styles\";\r\n\r\nconst ColorStyles = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Colors-styles\" }/>\r\n            <h1>Colors / Styles</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            { styles.map( style => <CodeSample key={style.name} label={ `For ${ style.name }` } codeString={ style.class }/> ) }\r\n            <div id={ \"background\" } className={ \"pt--xs\" }>\r\n                <h2>Background</h2>\r\n                { colors.map( color => <div key={color} className={ `p--md mb--sm bg--${ color }` }>.bg--{ color }</div> ) }\r\n            </div>\r\n\r\n            <div id={ \"text\" } className={ \"pt--xs\" }>\r\n                <h2>Text</h2>\r\n                <div className={ \"p--md mb--sm\" }>\r\n                    { colors.map( color => <span key={color} className={ `p--md mb--sm text--${ color }` }>.text--{ color }</span> ) }\r\n                </div>\r\n            </div>\r\n\r\n            <div id={ \"border\" } className={ \"pt--xs\" }>\r\n                <h2>Border</h2>\r\n                { colors.map( color => <div key={color} className={ `p--md mb--sm brd brd--${ color }` }>.text--{ color }</div> ) }\r\n            </div>\r\n\r\n            <div id={ \"svg\" } className={ \"pt--xs\" }>\r\n                <h2>SVG</h2>\r\n                <div className={ \"p--md mb--sm flex\" }>\r\n                    { colors.map( ( color, index ) => {\r\n                        return (\r\n                            <div key={color} className={ \"text--center\" + (index === 1 ? \" mx--xl\" : \"\") }>\r\n                                <svg height=\"100\" width=\"100\" className={ `fill--${ color }` }>\r\n                                    <circle cx=\"50\" cy=\"50\" r=\"40\"/>\r\n                                </svg>\r\n                                <div>.fill--{ color }</div>\r\n                            </div>\r\n                        )\r\n                    } ) }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColorStyles\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}