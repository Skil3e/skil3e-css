{"version":3,"sources":["webpack:///./src/components/HeadMeta.tsx","webpack:///./src/components/GroupHeading.tsx","webpack:///./src/components/CodeHighlight.tsx","webpack:///./src/pages/docs/colors.tsx"],"names":["HeadMeta","title","description","image","type","pathname","useStaticQuery","siteMetadata","site","src","ogImage","childImageSharp","original","url","siteUrl","pageTitle","pageDescription","imageWithFallback","name","content","property","GroupHeading","children","id","replace","toLowerCase","className","CodeHighlight","lang","Colors","shades","usePrism","width","variables","map","clr","i","key","shade"],"mappings":"6FAAA,wCA0DeA,IA7CiB,SAAC,GAAoD,IAAjDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SAAgB,EACOC,yBAAe,cAAvFC,EADiE,EACzEC,KAAQD,aAA0DE,EADO,EACjDC,QAAWC,gBAAmBC,SAAYH,IAoBpEI,EAAMN,EAAaO,QAAU,gBAAkBT,UAAY,IAC3DU,EAAgBd,EAAP,MAAoBM,EAAaN,MAC1Ce,EAAkBd,UAAeK,EAAaL,YAC9Ce,EAAoBd,UAAUI,EAAaO,QAAU,cAAgBL,EAE3E,OACI,gBAAC,IAAD,KACI,6BAASM,GACT,wBAAMG,KAAK,QAAQC,QAAUJ,IAC7B,wBAAMG,KAAK,cAAcC,QAAUH,IACnC,wBAAMI,SAAS,UAAUD,QAAUf,UAAQ,YAC3C,wBAAMgB,SAAS,SAASD,QAAUN,IAClC,wBAAMO,SAAS,WAAWD,QAAUJ,IACpC,wBAAMK,SAAS,iBAAiBD,QAAUH,IAC1C,wBAAMI,SAAS,WAAWD,QAAUF,IACpC,wBAAMG,SAAS,eAAeD,QAAQ,wBACtC,wBAAMC,SAAS,cAAcD,QAAUN,IACvC,wBAAMO,SAAS,gBAAgBD,QAAUJ,IACzC,wBAAMK,SAAS,sBAAsBD,QAAUH,IAC/C,wBAAMI,SAAS,gBAAgBD,QAAUF,O,oCCrDrD,gBAgBeI,IATyB,SAAC,GAA0B,IAAvBpB,EAAuB,EAAvBA,MAAOqB,EAAgB,EAAhBA,SAC/C,OACI,uBAAKC,GAAKtB,EAAMuB,QAAS,IAAK,KAAMC,eAChC,sBAAIC,UAAY,kBAAqBzB,GACnCqB,GAAY,qBAAGI,UAAU,UAAWJ,M,kCCXlD,gBAeeK,IAR2B,SAAC,GAAyB,IAAtBC,EAAsB,EAAtBA,KAAMN,EAAgB,EAAhBA,SAChD,OACI,uBAAKI,UAAS,aAAgBE,UAAQ,SAClC,4BAAQN,M,kCCVpB,uEA2DeO,UAhDa,WACxB,IACMC,EAAS,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEtC,OADAC,cAEI,uBAAKL,UAAY,SACb,gBAAC,IAAD,CAAUzB,MAAQ,SAAWI,SAAW,gBACxC,gBAAC,IAAD,CAAcJ,MAAQ,UAAtB,wEAGA,sBAAIyB,UAAY,kBAAhB,sBACA,yBAAOM,MAAQ,OAASN,UAAY,mCAChC,6BACA,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,aACA,sBAAIA,UAAY,4BAA6B,kEAEjD,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,eACA,sBAAIA,UAAY,4BAA6B,uDAEjD,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,iBACA,sBAAIA,UAAY,4BAA6B,8DAEjD,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,eACA,sBAAIA,UAAY,4BAA6B,wDAIrD,gBAAC,IAAD,CAAczB,MAAQ,cACtB,gBAAC,IAAD,CAAeqB,SAAWW,IAC1B,gBAAC,IAAD,CAAchC,MAAQ,yBACtB,uBAAKyB,UAAY,yBAjCH,CAAE,SAAU,OAAQ,OAAQ,OAAQ,UAAW,SAAU,SAAU,MAAO,OAAQ,UAkC5EQ,KAAK,SAAEC,EAAKC,GAAP,OACjB,uBAAKC,IAAMF,EAAMT,UAAY,qBAAuBU,EAAI,GAAM,EAAI,SAAW,WACzE,uBAAKV,UAAS,OAAWS,EAAX,WAAkC,WAARA,GAA4B,SAARA,GAA0B,YAARA,EAAtC,SAAoEA,EAApE,cAAyFA,EAAzF,OAAyGA,GACjJ,uBAAKT,UAAY,cACXI,EAAOI,KAAK,SAAAI,GAAK,OAAI,uBAAKD,IAAMC,EAAQZ,UAAS,OAAWS,EAAX,IAAoBG,EAApB,KAA+BA,EAAQ,GAAR,SAAuBH,EAAvB,MAA/B,UAA4EA,EAAxG,IAAgHG,cAWnK,IAAML,EAAY","file":"component---src-pages-docs-colors-tsx-438840e3dfecda65a383.js","sourcesContent":["import * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\ninterface IHeadMeta {\r\n    title?: string\r\n    description?: string\r\n    image?: string\r\n    type?: \"website\"\r\n    pathname?: string\r\n}\r\n\r\nconst HeadMeta: FC<IHeadMeta> = ( { title, description, image, type, pathname } ) => {\r\n    const { site: { siteMetadata }, ogImage: { childImageSharp: { original: { src } } } } = useStaticQuery(\r\n        graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n                description\r\n                siteUrl\r\n              }\r\n            }\r\n            ogImage: file(relativePath: {eq: \"og-fallback.jpg\"}) {\r\n              childImageSharp {\r\n                original {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n    )\r\n    const url = siteMetadata.siteUrl + \"/skil3e-css/\" + (pathname ?? \"\");\r\n    const pageTitle = `${ title } | ${ siteMetadata.title }`\r\n    const pageDescription = description ?? siteMetadata.description;\r\n    const imageWithFallback = image ?? (siteMetadata.siteUrl + \"/skil3e-css\" + src)\r\n\r\n    return (\r\n        <Helmet>\r\n            <title>{ pageTitle }</title>\r\n            <meta name=\"title\" content={ pageTitle }/>\r\n            <meta name=\"description\" content={ pageDescription }/>\r\n            <meta property=\"og:type\" content={ type ?? \"website\" }/>\r\n            <meta property=\"og:url\" content={ url }/>\r\n            <meta property=\"og:title\" content={ pageTitle }/>\r\n            <meta property=\"og:description\" content={ pageDescription }/>\r\n            <meta property=\"og:image\" content={ imageWithFallback }/>\r\n            <meta property=\"twitter:card\" content=\"summary_large_image\"/>\r\n            <meta property=\"twitter:url\" content={ url }/>\r\n            <meta property=\"twitter:title\" content={ pageTitle }/>\r\n            <meta property=\"twitter:description\" content={ pageDescription }/>\r\n            <meta property=\"twitter:image\" content={ imageWithFallback }/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HeadMeta\r\n","import * as React from \"react\";\r\nimport { FC } from \"react\";\r\n\r\ninterface IGroupHeading {\r\n    title: string\r\n}\r\n\r\nconst GroupHeading: FC<IGroupHeading> = ( { title, children } ) => {\r\n    return (\r\n        <div id={ title.replace( \" \", \"-\" ).toLowerCase() }>\r\n            <h2 className={ \"mt--xxl mb--lg\" }>{ title }</h2>\r\n            { children && <p className=\"mb--md\">{ children }</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupHeading\r\n","import * as React from \"react\";\r\nimport { FC } from \"react\";\r\n\r\ninterface ICodeHighlight {\r\n    lang?: string\r\n}\r\n\r\nconst CodeHighlight: FC<ICodeHighlight> = ( { lang, children } ) => {\r\n    return (\r\n        <pre className={ `language-${ lang ?? \"scss\" }` }>\r\n            <code>{ children }</code>\r\n        </pre>\r\n    )\r\n}\r\n\r\nexport default CodeHighlight\r\n","import * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport { createLabel, usePrism } from \"../../utils\";\r\nimport GroupHeading from \"../../components/GroupHeading\";\r\nimport CodeHighlight from \"../../components/CodeHighlight\";\r\nimport HeadMeta from \"../../components/HeadMeta\";\r\n\r\ninterface IColors {\r\n\r\n}\r\n\r\nconst Colors: FC<IColors> = () => {\r\n    const defaultColors = [ 'accent', \"gray\", 'blue', \"mint\", \"emerald\", \"yellow\", \"orange\", \"red\", \"pink\", \"purple\" ];\r\n    const shades = [ 1, 2, 3, 4, 5, 6, 7, 8 ];\r\n    usePrism();\r\n    return (\r\n        <div className={ \"utils\" }>\r\n            <HeadMeta title={ \"Colors\" } pathname={ \"docs/colors\" }/>\r\n            <GroupHeading title={ \"Colors\" }>\r\n                The framework comes with some default that you can extend or remove.\r\n            </GroupHeading>\r\n            <h3 className={ \"mt--xxl mb--lg\" }>Default properties</h3>\r\n            <table width={ \"100%\" } className={ \"table-classes text--code bg--bg\" }>\r\n                <tbody>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>bg--color</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>background-color : var(--color);</code></td>\r\n                </tr>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>text--color</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>color : var(--color);</code></td>\r\n                </tr>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>border--color</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>border-color : var(--color);</code></td>\r\n                </tr>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>fill--color</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>fill : var(--color);</code></td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <GroupHeading title={ \"Customize\" }/>\r\n            <CodeHighlight children={ variables }/>\r\n            <GroupHeading title={ \"Default color shades\" }/>\r\n            <div className={ \"md:flex md:flex--wrap\" }>\r\n                { defaultColors.map( ( clr, i ) =>\r\n                    <div key={ clr } className={ \"mb--md md:col--6 \" + (i % 2 === 0 ? \"pr--md\" : \"pl--md\") }>\r\n                        <div className={ `bg--${ clr } p--lg ${ clr === \"yellow\" || clr === \"mint\" || clr === \"emerald\" ? `text--${ clr }-8` : `text--${ clr }-1` }` }>{ clr }</div>\r\n                        <div className={ \"color-grid\" }>\r\n                            { shades.map( shade => <div key={ shade } className={ `bg--${ clr }-${ shade } ${ shade < 5 && `text--${ clr }-8` } p--lg` }>{ clr }-{ shade }</div> ) }\r\n                        </div>\r\n                    </div>\r\n                ) }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Colors\r\n\r\nconst variables = `@use \"~skil3e-css/src/color_shades\" with (\r\n$divider         : st.$divider,\r\n$important       : st.$important,\r\n$steps           : 4,\r\n$ratio           : 1.25,\r\n$satRatio        : .5,\r\n$selector        : \":root\",\r\n$hover           : true,\r\n\r\n$styleProperties : (\r\n\\t'text' : color,\r\n\\t'bg' : background-color,\r\n\\t'fill' : fill,\r\n\\t'border' : border-color\r\n),\r\n\r\n$colors          : (\r\n\\t'accent' : #0B5FFF,\r\n\\t'blue' : #09569c,\r\n\\t\"mint\": #10a791,\r\n\\t\"emerald\": #0baa3c,\r\n\\t\"yellow\": #dbca0f,\r\n\\t\"orange\": #cd5611,\r\n\\t\"red\": #e51818,\r\n\\t\"pink\": #c41295,\r\n\\t\"purple\": #7c0cbb,\r\n),\r\n\r\n$grays           : ('gray' : #51515a),\r\n\r\n$addColors       : (),\r\n$addGrays        : (),\r\n$removeColors    : (),\r\n$addProperties   : ()\r\n);`\r\n"],"sourceRoot":""}