{"version":3,"sources":["webpack:///./src/pages/utilities/screen-readers.tsx","webpack:///./src/components/ExampleComponents.tsx"],"names":["ScreenReaders","title","label","codeString","className","tabIndex","SectionWrapper","id","children","headingSize","createLabel","lang","ExampleContainer","memo","wrapperClassName","isDefault","grid","useHeight","height","wrap","customLabel","style","minHeight","gridTemplateColumns","Child","fullwidth","CodeSample"],"mappings":"4FAAA,+CA6BeA,UAzBO,WAClB,OACI,gCACI,gBAAC,IAAD,CAAKC,MAAQ,mBACb,4CACA,mEACA,gBAAC,IAAD,CAAYC,MAAQ,0BAA4BC,WAAU,YAC1D,gBAAC,IAAD,CAAYD,MAAQ,2BAA6BC,WAAU,sBAC3D,gBAAC,IAAD,CAAYD,MAAQ,6BAA+BC,WAAU,gBAC7D,uBAAKC,UAAW,UACZ,uBAAKC,SAAU,EAAGD,UAAW,WAA7B,8BACA,gCAAO,wBAAMA,UAAW,sBAAjB,YAAP,2IAEJ,uBAAKA,UAAW,UACZ,uBAAKC,SAAU,EAAGD,UAAW,yCAA7B,8BACA,gCAAO,wBAAMA,UAAW,sBAAjB,sBAAP,wDAA4H,wBAAMA,UAAW,sBAAjB,UAA5H,qEAEJ,uBAAKA,UAAW,UACZ,uBAAKC,SAAU,EAAGD,UAAW,mCAA7B,8BACA,gCAAO,wBAAMA,UAAW,sBAAjB,gBAAP,kC,kCCvBhB,gLAWaE,EAAyD,SAAC,GAAgD,IAA7CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,SAAUL,EAA+B,EAA/BA,WAAYM,EAAmB,EAAnBA,YAChG,OACI,2BAASF,GAAKA,EAAKH,UAAY,UAC3B,sBAAIA,UAAYK,GAAgBC,YAAaH,IAC3CC,EACAL,GAAc,gBAAC,IAAD,CAAiBQ,KAAO,OAASR,WAAaA,MAgB7DS,EAA6DC,gBAAM,YAAqH,IAAjHL,EAAiH,EAAjHA,SAAUJ,EAAuG,EAAvGA,UAAWU,EAA4F,EAA5FA,iBAAkBC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,KAA+D,IAAzDC,iBAAyD,aAAvCC,cAAuC,MAA9B,IAA8B,EAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,YAC9K,OACI,uBAAKhB,UAAYU,GACXV,EAAY,yBAAOA,UAAY,gBAAiB,gCAASgB,GAA4BhB,EAArC,IAAmDW,GAAa,cAA+B,GACjJ,uBAAKM,MAAQ,CACTC,UAAqBL,GAAa,IAClCC,OAAqBD,GAAaC,EAClCK,oBAAqB,0CAEpBnB,WAAgBY,EAAO,OAAS,QAAvB,KAAmCG,EAAO,aAAe,IAAzD,+EAA4If,GACpJI,OAMLgB,EAA+FX,gBAAM,YAAiD,IAA7CT,EAA6C,EAA7CA,UAAWqB,EAAkC,EAAlCA,UAAWjB,EAAuB,EAAvBA,SAAUa,EAAa,EAAbA,MAClJ,OACI,uBAAKA,MAAQA,EAAQjB,WAAgBqB,EAAY,SAAW,IAA9B,yDAA0FrB,GAAwB,KAAUI,GAAsB,YAI3KkB,EAAuE,SAAC,GAA4B,IAAzBxB,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,WAC3F,OACI,gCACI,yBAAOC,UAAY,eAAkBF,GACrC,gBAAC,IAAD,CAAiBS,KAAO,OAASR,WAAaA","file":"component---src-pages-utilities-screen-readers-tsx-be86fc079940657a9e5e.js","sourcesContent":["import * as React from \"react\"\r\nimport SEO from \"../../components/seo\";\r\nimport { CodeSample } from \"../../components/ExampleComponents\";\r\n\r\nconst ScreenReaders = () => {\r\n    return (\r\n        <>\r\n            <SEO title={ \"Screen Readers\" }/>\r\n            <h1>Screen Readers</h1>\r\n            <p>The class constructor looks like this:</p>\r\n            <CodeSample label={ \"For Screen Readers Only\" } codeString={ `sr-only` }/>\r\n            <CodeSample label={ \"For reveal only on Focus\" } codeString={ `sr-only-focusable` }/>\r\n            <CodeSample label={ \"Remove Screen Readers Only\" } codeString={ `not-sr-only` }/>\r\n            <div className={\"mb--lg\"}>\r\n                <div tabIndex={0} className={\"sr-only\"}>Hidden div, this is magic!</div>\r\n                <p>Use <span className={\"fira text--primary\"}>.sr-only</span> to hide an element from the screen but need screen readers to recognize it. Inspect the page to see the screen reader only div above.</p>\r\n            </div>\r\n            <div className={\"mb--lg\"}>\r\n                <div tabIndex={1} className={\"p--md mb--md bg--bg sr-only-focusable\"}>Hidden div, this is magic!</div>\r\n                <p>Use <span className={\"fira text--primary\"}>.sr-only-focusable</span> to hide an element from the screen and reveal it in <span className={\"fira text--primary\"}>:focus</span> Hit tha tab key to focus on the hidden div above and reveal it.</p>\r\n            </div>\r\n            <div className={\"mb--lg\"}>\r\n                <div tabIndex={1} className={\"p--md mb--md bg--bg not-sr-only\"}>Hidden div, this is magic!</div>\r\n                <p>Use <span className={\"fira text--primary\"}>.not-sr-only</span> if you need to remove it.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScreenReaders\r\n","import { CSSProperties, FunctionComponent, memo } from \"react\";\r\nimport * as React from \"react\";\r\nimport SyntaxHighlight from \"./SynaxHighlight\";\r\nimport { createLabel } from \"../utilities\";\r\n\r\ninterface sectionWrapperProps {\r\n    id: string\r\n    codeString?: string\r\n    headingSize?: string\r\n}\r\n\r\nexport const SectionWrapper: FunctionComponent<sectionWrapperProps> = ( { id, children, codeString, headingSize } ) => {\r\n    return (\r\n        <section id={ id } className={ \"pt--xs\" }>\r\n            <h2 className={ headingSize }>{ createLabel( id ) }</h2>\r\n            { children }\r\n            { codeString && <SyntaxHighlight lang={ 'html' } codeString={ codeString }/> }\r\n        </section>\r\n    )\r\n}\r\n\r\ninterface ExampleContainerProps {\r\n    className?: string,\r\n    wrapperClassName?: string,\r\n    customLabel?: string,\r\n    isDefault?: boolean,\r\n    grid?: boolean,\r\n    useHeight?: boolean,\r\n    wrap?: boolean,\r\n    height?: number\r\n}\r\n\r\nexport const ExampleContainer: FunctionComponent<ExampleContainerProps> = memo( ( { children, className, wrapperClassName, isDefault, grid, useHeight = true, height = 120, wrap, customLabel } ) => {\r\n    return (\r\n        <div className={ wrapperClassName }>\r\n            { className ? <small className={ \"block mb--xs\" }><code>.{ customLabel ? customLabel : className } { isDefault && '(default)' }</code></small> : \"\" }\r\n            <div style={ {\r\n                minHeight          : useHeight && 120,\r\n                height             : useHeight && height,\r\n                gridTemplateColumns: \" repeat(auto-fit, minmax(300px, 1fr) )\"\r\n            } }\r\n                 className={ `${ grid ? \"grid\" : \"flex\" } ${ wrap ? \"flex--wrap\" : \"\" } bg--bgDimmed text--text brd--border brd--md brd--border p--xs mb--md round ${ className }` }>\r\n                { children }\r\n            </div>\r\n        </div>\r\n    )\r\n} )\r\n\r\nexport const Child: FunctionComponent<{ className?: string, fullwidth?: boolean, style?: CSSProperties }> = memo( ( { className, fullwidth, children, style } ) => {\r\n    return (\r\n        <div style={ style } className={ `${ fullwidth ? \"w--100\" : \"\" } p--md bg--bg text--text brd--md brd--bgDimmed round ${ className ? className : \"\" }` }>{ children ? children : \"Child\" }</div>\r\n    )\r\n} )\r\n\r\nexport const CodeSample: FunctionComponent<{ label: string, codeString: string }> = ( { label, codeString } ) => {\r\n    return (\r\n        <>\r\n            <small className={ \"block p--xs\" }>{ label }</small>\r\n            <SyntaxHighlight lang={ 'html' } codeString={ codeString }/>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}