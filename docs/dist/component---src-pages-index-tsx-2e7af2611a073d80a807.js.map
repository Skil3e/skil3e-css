{"version":3,"sources":["webpack:///./src/components/HeadMeta.tsx","webpack:///./src/pages/index.tsx"],"names":["HeadMeta","title","description","image","type","pathname","useStaticQuery","siteMetadata","site","src","ogImage","childImageSharp","original","url","domain","pageTitle","pageDescription","imageWithFallback","Helmet","name","content","property","IndexPage","className","Logo","height","rel","target","href","buttonCls","to"],"mappings":"0IA0DeA,EA7CiB,SAAC,GAAoD,IAAjDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SAAgB,EACOC,yBAAe,cAAvFC,EADiE,EACzEC,KAAQD,aAA0DE,EADO,EACjDC,QAAWC,gBAAmBC,SAAYH,IAoBpEI,EAAMN,EAAaO,QAAUT,UAAY,IACzCU,EAAgBd,EAAP,MAAoBM,EAAaN,MAC1Ce,EAAkBd,UAAeK,EAAaL,YAC9Ce,EAAoBd,UAAUI,EAAaO,OAASL,EAE1D,OACI,gBAACS,EAAA,EAAD,KACI,6BAASH,GACT,wBAAMI,KAAK,QAAQC,QAAUL,IAC7B,wBAAMI,KAAK,cAAcC,QAAUJ,IACnC,wBAAMK,SAAS,UAAUD,QAAUhB,UAAQ,YAC3C,wBAAMiB,SAAS,SAASD,QAAUP,IAClC,wBAAMQ,SAAS,WAAWD,QAAUL,IACpC,wBAAMM,SAAS,iBAAiBD,QAAUJ,IAC1C,wBAAMK,SAAS,WAAWD,QAAUH,IACpC,wBAAMI,SAAS,eAAeD,QAAQ,wBACtC,wBAAMC,SAAS,cAAcD,QAAUP,IACvC,wBAAMQ,SAAS,gBAAgBD,QAAUL,IACzC,wBAAMM,SAAS,sBAAsBD,QAAUJ,IAC/C,wBAAMK,SAAS,gBAAgBD,QAAUH,M,YCjCtCK,UAfG,WAEd,OACI,gCACI,gBAAC,EAAD,CAAUrB,MAAQ,SAClB,2BAASsB,UAAY,gEACjB,gBAACC,EAAA,EAAD,CAAMC,OAAS,MACf,sBAAIF,UAAY,WAAhB,eACA,gIAAuG,qBAAGG,IAAM,sBAAwBC,OAAS,SAAWC,KAAK,gDAA1D,YAAvG,0EACA,gBAAC,OAAD,CAAML,UAAYM,2GAAwBC,GAAK,SAA/C","file":"component---src-pages-index-tsx-2e7af2611a073d80a807.js","sourcesContent":["import * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\ninterface IHeadMeta {\r\n    title?: string\r\n    description?: string\r\n    image?: string\r\n    type?: \"website\"\r\n    pathname?: string\r\n}\r\n\r\nconst HeadMeta: FC<IHeadMeta> = ( { title, description, image, type, pathname } ) => {\r\n    const { site: { siteMetadata }, ogImage: { childImageSharp: { original: { src } } } } = useStaticQuery(\r\n        graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n                description\r\n                siteUrl\r\n              }\r\n            }\r\n            ogImage: file(relativePath: {eq: \"og-fallback.jpg\"}) {\r\n              childImageSharp {\r\n                original {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n    )\r\n    const url = siteMetadata.domain + (pathname ?? \"\");\r\n    const pageTitle = `${ title } | ${ siteMetadata.title }`\r\n    const pageDescription = description ?? siteMetadata.description;\r\n    const imageWithFallback = image ?? (siteMetadata.domain + src)\r\n\r\n    return (\r\n        <Helmet>\r\n            <title>{ pageTitle }</title>\r\n            <meta name=\"title\" content={ pageTitle }/>\r\n            <meta name=\"description\" content={ pageDescription }/>\r\n            <meta property=\"og:type\" content={ type ?? \"website\" }/>\r\n            <meta property=\"og:url\" content={ url }/>\r\n            <meta property=\"og:title\" content={ pageTitle }/>\r\n            <meta property=\"og:description\" content={ pageDescription }/>\r\n            <meta property=\"og:image\" content={ imageWithFallback }/>\r\n            <meta property=\"twitter:card\" content=\"summary_large_image\"/>\r\n            <meta property=\"twitter:url\" content={ url }/>\r\n            <meta property=\"twitter:title\" content={ pageTitle }/>\r\n            <meta property=\"twitter:description\" content={ pageDescription }/>\r\n            <meta property=\"twitter:image\" content={ imageWithFallback }/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HeadMeta\r\n","import * as React from \"react\"\r\nimport HeadMeta from \"../components/HeadMeta\";\r\nimport Logo from \"../components/Logo\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst IndexPage = () => {\r\n    const buttonCls = \"px--md py--15 text--blue-1 bg--accent hover:bg--accent-5 round transition--colors cursor--pointer\"\r\n    return (\r\n        <>\r\n            <HeadMeta title={ \"Home\" }/>\r\n            <section className={ \"text--center h--main flex--center-middle flex--column bg--bg\" }>\r\n                <Logo height={ 200 }/>\r\n                <h1 className={ \"mt--xxl\" }>Skil3e SCSS</h1>\r\n                <p>A simple & modular CSS utility framework with dark and light mode. Skil3e css utilizes the new SASS <a rel={ \"noopener noreferrer\" } target={ \"_blank\" } href=\"https://sass-lang.com/documentation/at-rules\">at-rules</a> that allows you to use only the part you need, the way you need them.</p>\r\n                <Link className={ buttonCls + \" mt--lg\" } to={ \"/docs\" }>Documentation</Link>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}