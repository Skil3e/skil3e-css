{"version":3,"sources":["webpack:///./src/components/HeadMeta.tsx","webpack:///./src/components/GroupHeading.tsx","webpack:///./src/pages/docs/screen-readers.tsx"],"names":["HeadMeta","title","description","image","type","pathname","useStaticQuery","siteMetadata","site","src","ogImage","childImageSharp","original","url","siteUrl","pageTitle","pageDescription","imageWithFallback","name","content","property","GroupHeading","children","id","replace","toLowerCase","className","ScreenReaders","usePrism","width"],"mappings":"6FAAA,wCA0DeA,IA7CiB,SAAC,GAAoD,IAAjDC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,SAAgB,EACOC,yBAAe,cAAvFC,EADiE,EACzEC,KAAQD,aAA0DE,EADO,EACjDC,QAAWC,gBAAmBC,SAAYH,IAoBpEI,EAAMN,EAAaO,QAAU,gBAAkBT,UAAY,IAC3DU,EAAgBd,EAAP,MAAoBM,EAAaN,MAC1Ce,EAAkBd,UAAeK,EAAaL,YAC9Ce,EAAoBd,UAAUI,EAAaO,QAAUL,EAE3D,OACI,gBAAC,IAAD,KACI,6BAASM,GACT,wBAAMG,KAAK,QAAQC,QAAUJ,IAC7B,wBAAMG,KAAK,cAAcC,QAAUH,IACnC,wBAAMI,SAAS,UAAUD,QAAUf,UAAQ,YAC3C,wBAAMgB,SAAS,SAASD,QAAUN,IAClC,wBAAMO,SAAS,WAAWD,QAAUJ,IACpC,wBAAMK,SAAS,iBAAiBD,QAAUH,IAC1C,wBAAMI,SAAS,WAAWD,QAAUF,IACpC,wBAAMG,SAAS,eAAeD,QAAQ,wBACtC,wBAAMC,SAAS,cAAcD,QAAUN,IACvC,wBAAMO,SAAS,gBAAgBD,QAAUJ,IACzC,wBAAMK,SAAS,sBAAsBD,QAAUH,IAC/C,wBAAMI,SAAS,gBAAgBD,QAAUF,O,oCCrDrD,gBAgBeI,IATyB,SAAC,GAA0B,IAAvBpB,EAAuB,EAAvBA,MAAOqB,EAAgB,EAAhBA,SAC/C,OACI,uBAAKC,GAAKtB,EAAMuB,QAAS,IAAK,KAAMC,eAChC,sBAAIC,UAAY,kBAAqBzB,GACnCqB,GAAY,qBAAGI,UAAU,UAAWJ,M,kCCXlD,2DA8DeK,UApD2B,WAEtC,OADAC,cAEI,uBAAKF,UAAY,SACb,gBAAC,IAAD,CAAUzB,MAAQ,iBAAmBI,SAAW,wBAChD,gBAAC,IAAD,CAAcJ,MAAQ,0BACtB,yBAAO4B,MAAQ,OAASH,UAAY,mCAChC,6BACA,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,WACA,sBAAIA,UAAY,4BAA6B,oDAAiC,2BAC1E,4CAAyB,2BACzB,6CAA0B,2BAC1B,4CAAyB,2BACzB,8CAA2B,2BAC3B,kDAA+B,2BAC/B,wDAAqC,2BACrC,6CAER,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,eACA,sBAAIA,UAAY,4BAA6B,kDAA+B,2BACxE,6CAA0B,2BAC1B,8CAA2B,2BAC3B,4CAAyB,2BACzB,2CAAwB,2BACxB,mDAAgC,2BAChC,4CAAyB,2BACzB,6CAER,sBAAIA,UAAY,2BACZ,sBAAIA,UAAY,gBAAhB,qBACA,sBAAIA,UAAY,4BAA6B,oDAAiC,2BAC1E,4CAAyB,2BACzB,6CAA0B,2BAC1B,4CAAyB,2BACzB,8CAA2B,2BAC3B,kDAA+B,2BAC/B,wDAAqC,2BACrC,2CAAwB,2BACxB,sCAAmB,2BACnB,oDAAiC,2BACjC,6CAA0B,2BAC1B","file":"component---src-pages-docs-screen-readers-tsx-0fc184dcc8f7cd956810.js","sourcesContent":["import * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport { Helmet } from 'react-helmet'\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\n\r\ninterface IHeadMeta {\r\n    title?: string\r\n    description?: string\r\n    image?: string\r\n    type?: \"website\"\r\n    pathname?: string\r\n}\r\n\r\nconst HeadMeta: FC<IHeadMeta> = ( { title, description, image, type, pathname } ) => {\r\n    const { site: { siteMetadata }, ogImage: { childImageSharp: { original: { src } } } } = useStaticQuery(\r\n        graphql`\r\n          query {\r\n            site {\r\n              siteMetadata {\r\n                title\r\n                description\r\n                siteUrl\r\n              }\r\n            }\r\n            ogImage: file(relativePath: {eq: \"og-fallback.jpg\"}) {\r\n              childImageSharp {\r\n                original {\r\n                  src\r\n                }\r\n              }\r\n            }\r\n          }\r\n        `\r\n    )\r\n    const url = siteMetadata.siteUrl + \"/skil3e-css/\" + (pathname ?? \"\");\r\n    const pageTitle = `${ title } | ${ siteMetadata.title }`\r\n    const pageDescription = description ?? siteMetadata.description;\r\n    const imageWithFallback = image ?? (siteMetadata.siteUrl + src)\r\n\r\n    return (\r\n        <Helmet>\r\n            <title>{ pageTitle }</title>\r\n            <meta name=\"title\" content={ pageTitle }/>\r\n            <meta name=\"description\" content={ pageDescription }/>\r\n            <meta property=\"og:type\" content={ type ?? \"website\" }/>\r\n            <meta property=\"og:url\" content={ url }/>\r\n            <meta property=\"og:title\" content={ pageTitle }/>\r\n            <meta property=\"og:description\" content={ pageDescription }/>\r\n            <meta property=\"og:image\" content={ imageWithFallback }/>\r\n            <meta property=\"twitter:card\" content=\"summary_large_image\"/>\r\n            <meta property=\"twitter:url\" content={ url }/>\r\n            <meta property=\"twitter:title\" content={ pageTitle }/>\r\n            <meta property=\"twitter:description\" content={ pageDescription }/>\r\n            <meta property=\"twitter:image\" content={ imageWithFallback }/>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default HeadMeta\r\n","import * as React from \"react\";\r\nimport { FC } from \"react\";\r\n\r\ninterface IGroupHeading {\r\n    title: string\r\n}\r\n\r\nconst GroupHeading: FC<IGroupHeading> = ( { title, children } ) => {\r\n    return (\r\n        <div id={ title.replace( \" \", \"-\" ).toLowerCase() }>\r\n            <h2 className={ \"mt--xxl mb--lg\" }>{ title }</h2>\r\n            { children && <p className=\"mb--md\">{ children }</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupHeading\r\n","import * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport { usePrism } from \"../../utils\";\r\nimport GroupHeading from \"../../components/GroupHeading\";\r\nimport HeadMeta from \"../../components/HeadMeta\";\r\n\r\ninterface IScreenReaders {\r\n\r\n}\r\n\r\nconst ScreenReaders: FC<IScreenReaders> = () => {\r\n    usePrism();\r\n    return (\r\n        <div className={ \"utils\" }>\r\n            <HeadMeta title={ \"Screen readers\" } pathname={ \"docs/screen-readers\" }/>\r\n            <GroupHeading title={ \"Screen reader helpers\" }/>\r\n            <table width={ \"100%\" } className={ \"table-classes text--code bg--bg\" }>\r\n                <tbody>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>sr-only</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>position : absolute;</code><br/>\r\n                        <code>width : 1px;</code><br/>\r\n                        <code>height : 1px;</code><br/>\r\n                        <code>padding : 0;</code><br/>\r\n                        <code>margin : -1px;</code><br/>\r\n                        <code>overflow : hidden;</code><br/>\r\n                        <code>clip : rect(0, 0, 0, 0);</code><br/>\r\n                        <code>border : 0;</code></td>\r\n                </tr>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>not-sr-only</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>position : static;</code><br/>\r\n                        <code>width : auto;</code><br/>\r\n                        <code>height : auto;</code><br/>\r\n                        <code>padding : 0;</code><br/>\r\n                        <code>margin : 0;</code><br/>\r\n                        <code>overflow : visible;</code><br/>\r\n                        <code>clip : auto;</code><br/>\r\n                        <code>border : 0;</code></td>\r\n                </tr>\r\n                <tr className={ \"border-t border--border\" }>\r\n                    <td className={ \"w--50 p--md \" }>sr-only-focusable</td>\r\n                    <td className={ \"w--50 p--md language-css\" }><code>position : absolute;</code><br/>\r\n                        <code>width : 1px;</code><br/>\r\n                        <code>height : 1px;</code><br/>\r\n                        <code>padding : 0;</code><br/>\r\n                        <code>margin : -1px;</code><br/>\r\n                        <code>overflow : hidden;</code><br/>\r\n                        <code>clip : rect(0, 0, 0, 0);</code><br/>\r\n                        <code>border : 0;</code><br/>\r\n                        <code>:focus</code><br/>\r\n                        <code>position : relative;</code><br/>\r\n                        <code>width : auto;</code><br/>\r\n                        <code>height : auto;</code>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScreenReaders\r\n"],"sourceRoot":""}