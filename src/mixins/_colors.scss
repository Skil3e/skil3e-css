@use "../functions/make-class" as *;
//--------------------------------------------------------------//
// Make Colors
//--------------------------------------------------------------//
@mixin makeColorVars($values, $selector, $namePrefix:null, $disable: false) {
  @if ($disable != true) {
	#{$selector} {
	  @each $name, $value in $values {
		--#{$namePrefix}#{$name}: #{$value};
	  }
	}
  }
}

@mixin makeColors($styleProperties, $values, $divider, $makeVarsSelector: false, $useCallback: false, $breakpoint: null, $disable: false, $important, $hover) {
  @if ($disable != true) {
	@if ($makeVarsSelector) {
	  @include makeColorVars($values, $makeVarsSelector);
	}
	@each $prefix, $property in $styleProperties {
	  @each $name, $value in $values {
		#{makeClass($name, $prefix, $divider, $breakpoint)} {
		  @if ($useCallback) {
			#{$property}: #{$value} #{if($important, "!important", null)};
		  }
		  #{$property}: var(--#{ $name }) #{if($important, "!important", null)};
		}
		@if ($hover) {
		  .#{$breakpoint}hover\:#{$prefix}#{$divider}#{$name}:hover {
			#{$property}: var(--#{$name}) #{if($important, "!important", null)};
		  }
		}
	  }
	}
  }
}

//--------------------------------------------------------------//
// Make Colors Shades
//--------------------------------------------------------------//
@mixin makeColorShadesVars($name: mint, $hue: 180, $saturation: 65%, $steps: 5, $ratio: 1.25) {
  @for $i from 1 through $steps {
	$per             : percentage(($i / $steps) / $ratio);
	--#{$name}--#{$i}: hsl(#{$hue}, #{$saturation}, #{$per});
  }
}

@mixin makeColorShadesProperty($prefix: bg, $name: mint, $property: background-color, $hue: 180, $saturation: 65%, $steps: 5, $ratio: 1.25) {
  @for $i from 1 through $steps {
	.#{$prefix}-#{$name}--#{$i} {
	  $per        : percentage(($i / $steps) / $ratio);
	  #{$property}: hsl($hue, $saturation, $per);
	}
  }
}
