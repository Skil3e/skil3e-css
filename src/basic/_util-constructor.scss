@use "../_util/mixins" as *;
@use "../globals";
$colors : globals.$colors!default;
$borderWidth: globals.$borderWidth!default;
$borderType: globals.$borderType!default;
$style-attribute: globals.$style-attribute!default;
$breakpoints: globals.$breakpoints!default;

.flex-center {
  @extend .d-flex;
  @extend .align-items-center;
}

@each $color, $hex in $colors {
  @each $name, $atr in ("border": border,"border-top": border-top, "border-right":border-right, "border-bottom":border-bottom, "border-left":border-left) {
	.#{$name}-#{$color} {
	  #{$atr}: $borderWidth $borderType $hex;
	}
  }
}


@each $color, $hex in $colors {
  @each $name, $atr in $style-attribute {
	.#{$name}-#{$color} {
	  #{$atr}: $hex;
	}
  }
}

@include display(null);
@include spacers(null);
@include text(null);
@include margin-auto(null);
@include fontSizes(null);
@include fontWeights(null);
// Flex Utilities
@include flex-row-col(null);
@include flex-wrap(null);
@include flex-fill(null);
@include flex-grow(null);
@include flex-shrink(null);
@include align-items(null);
@include align-content(null);
@include justify-content(null);
@include align-self(null);

@each $name, $size in $breakpoints {
  @media (min-width : $size) {
	@include display($name);
	@include spacers($name);
	@include margin-auto($name);

	@include flex-row-col($name);
	@include flex-wrap($name);
	@include flex-fill($name);
	@include flex-grow($name);
	@include flex-shrink($name);
	@include align-items($name);
	@include align-content($name);
	@include justify-content($name);
	@include align-self($name);
  }
}
