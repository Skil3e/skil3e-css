@use "../../util-constructor";
@use "../../globals";
@use "../../options" as opt;
@use "../../maps";
@use "button-mixins" as btnMx;
//-----------------------------------------------------------
//Variables
//-----------------------------------------------------------
$makeFill        : true !default;
$makeMinimalLink : true !default;
$makeOutline     : true !default;
$pX              : 1.5rem !default;
$pY              : .625rem !default;
$padding         : $pY $pX !default;
$textTransform   : initial !default;
$lineHeight      : 1.2 !default;
$border-radius   : globals.$border-radius !default;
$border-width    : globals.$border-width !default;
$borderStyle     : solid !default;
$border          : $border-width solid !default;
$colorsLight     : maps.$colorsLight !default;
$colorsDark      : maps.$colorsDark !default;

.button, button {
  @extend .inline-flex;
  @extend .#{opt.$align-items__prefix}center;
  @extend .#{opt.$justify-content__prefix}center;
  @extend .relative;
  @extend .#{opt.$cursor__prefix}pointer;
  @extend .#{opt.$transitions__prefix}--colors;
  z-index         : 1;
  vertical-align  : middle;
  text-transform  : $textTransform;
  line-height     : $lineHeight;
  text-decoration : none;
  background      : transparent;
  border          : $border transparent;
  border-radius   : $border-radius;

  .icon {
	@extend .transition--colors;
  }

  &.disabled, &:disabled {
	@extend .cursor--not-allowed;
	opacity : .65;
  }

  &:focus {
	outline : none;

	&::after,
	&::before {
	  outline : none;
	}
  }

  &.fullwidth {
	@extend .w--100;
  }
}

//-----------------------------------------------------------
// Button Fill
//-----------------------------------------------------------
@if ($makeFill) {
  .button.fill {
	@each $color, $hex in $colorsLight {
	  @include btnMx.makeFillButton($color, $hex);
	}
	@extend .px--lg;
	@extend .py--10;
	&.xs {
	  @extend .px--sm;
	  @extend .py--xs;
	  font-size : .75rem;
	}

	&.sm {
	  font-size : .9rem;
	  @extend .px--10;
	  @extend .py--sm;
	}

	&.lg {
	  @extend .px--lg;
	  @extend .py--10;
	  font-size : 1.5rem;
	}

	&.xl {
	  @extend .px--xxl;
	  @extend .py--md;
	  font-size : 1.75rem;
	}
  }
  body[data-theme="dark"] .button.fill {
	@each $color, $hex in $colorsDark {
	  @include btnMx.makeFillButton($color, $hex);
	}
  }
}

//-----------------------------------------------------------
// Button Link & Minimal Defaults
//-----------------------------------------------------------
@if ($makeMinimalLink) {
  .button.link,
  .button.minimal {
	padding    : 0;
	min-height : 0;
	border     : none;
	@each $color, $hex in $colorsLight {
	  @include btnMx.makeMinimalLinkButton($color, $hex);
	}

	&.xs {
	  font-size : .75rem;
	}

	&.sm {
	  font-size : .9rem;
	}

	&.lg {
	  font-size : 1.5rem;
	}

	&.xl {
	  font-size : 1.75rem;
	}
  }
  body[data-theme="dark"] {
	.button.link, .button.minimal {
	  @each $color, $hex in $colorsDark {
		@include btnMx.makeMinimalLinkButton($color, $hex);
	  }
	}
  }
  .button.link {
	display         : inline;
	vertical-align  : baseline;
	text-decoration : underline;
  }
}

//-----------------------------------------------------------
// Button Outline
//-----------------------------------------------------------
@if ($makeOutline) {
  .button.outline {
	@each $color, $hex in $colorsLight {
	  @include btnMx.makeOutlineButton($color, $hex);
	}
	@extend .px--lg;
	@extend .py--10;
	&.xs {
	  @extend .px--sm;
	  @extend .py--xs;
	  font-size : .75rem;
	}

	&.sm {
	  font-size : .9rem;
	  @extend .px--10;
	  @extend .py--sm;
	}

	&.lg {
	  @extend .px--lg;
	  @extend .py--10;
	  font-size : 1.5rem;
	}

	&.xl {
	  @extend .px--xxl;
	  @extend .py--md;
	  font-size : 1.75rem;
	}
  }

  body[data-theme="dark"] .button.outline {
	@each $color, $hex in $colorsDark {
	  @include btnMx.makeOutlineButton($color, $hex);
	}
  }

}
